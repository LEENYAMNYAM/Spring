<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="PersonMapper">

    <!-- 반복적으로 수행할 부분 함수처럼 만들기-->
    <sql id="search">
        <!-- 동적SQL문 활용함(mybatis홈페이지에 DynamicSQL에 설명되어 있음.)-->
        <where>
            <if test="word!=null and field=='name'">
                name like '%${word}%'
                <!-- #는 ''가 포함되어 있고, $는 ''가 없음-->
            </if>
            <if test="word!=null and field=='job'">
                job like CONCAT('%', #{word},'%')
                <!--$안쓸꺼면 concat써도됨-->
            </if>
        </where>
    </sql>

    <!-- 추가 -->
    <insert id="personInsert">
        insert into persontb values(#{id}, #{name}, #{password}, #{gender}, #{job})
    </insert>

    <!-- 전체보기(검색미포함) -->
    <select id = "personList" resultType="com.example.springexam01.dto.Person">
        select * from persontb
    </select>

    <!--전체보기(검색포함)-->
    <select id = "searchList" resultType="com.example.springexam01.dto.Person">
        select * from persontb
        <!-- 함수처럼 만든놈 가져오기(include) -->
        <include refid="search"></include>
    </select>

    <!-- 개수(검색미포함) -->
    <select id="personCount" resultType="Integer">
        select count(*) from persontb
    </select>
    <!-- 개수(검색포함) -->
    <select id="searchCount" resultType="Integer">
        select count(*) from persontb
        <include refid="search"></include>
    </select>

    <!-- 상세보기 -->
    <select id="personView" parameterType="String"
            resultType="com.example.springexam01.dto.Person">
        select * from persontb where id=#{id}
    </select>

    <!-- 삭제 -->
    <delete id="personDelete">
        delete from persontb where id=#{id}
    </delete>

    <!-- 수정폼으로 이동 -->
    <update id="personUpdate" parameterType="com.example.springexam01.dto.Person">
        update persontb set name=#{name}, password=#{password}, gender=#{gender}, job=#{job}
            where id=#{id}
    </update>

</mapper>